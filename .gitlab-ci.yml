image: python:3.11.2

variables:
  http_proxy: "$CODE_PROXY"
  https_proxy: "$CODE_PROXY"
  no_proxy: "$CODE_NO_PROXY"


before_script:
  - pip install -r requirements.txt
  - pip install ruff pylint


stages:
  - type-check
  - Code style
  - Static analysis
  - Unit tests


# Check code style, formatting, import sort order, etc.
basics:
  stage: Code style
  script:
    - ruff check
  tags:
    - LINUX-DOCKER


# A more thorough analysis of the code
pylint:
  stage: Static analysis
  script:
    - pylint --fail-under=9.38 resources
  tags:
    - LINUX-DOCKER

unit-tests:
  stage: Unit tests
  script:
    - PYTHONPATH=./resources python -m unittest discover -s unit_tests
  tags:
    - LINUX-DOCKER


pyright:
  stage: type-check
  before_script:
    - pip install pyright==1.1.380
  script:
    # update 73 after fixing the current issues; for now we just try to make
    # sure we won't be adding new ones
    - export ERRORS=$(PYTHONPATH=./resources pyright ./resources | tail -n 1 | grep -o '^[0-9]*')
    - '[ -z "$ERRORS" ] && ERRORS=0'  # Set ERRORS to 0 if it is empty
    - '[ "$ERRORS" -lt 100 ] 2>/dev/null && echo "Success." || (echo "Failure. Error count:" && exit 1)'
  tags:
    - LINUX-DOCKER